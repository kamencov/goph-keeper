syntax = "proto3";

package goph_keeper_v1;

option go_package = "goph-keeper/internal/proto/v1:pd";

message RegisterRequest {
  string login = 1;
  string password = 2;
}

message RegisterResponse {
  int32 uid = 1;
  string message = 2;
}

message AuthRequest {
  string login = 1;
  string password = 2;
}

message AuthResponse {
  string token = 1;
  string message = 2;
}

message PostLoginAndPasswordRequest {
  string resource = 1;
  string login = 2;
  string password = 3;
}

message PostTextDataRequest {
  reserved 1;
  string data = 2;
}

message PostBinaryDataRequest {
  reserved 1;
  bytes data = 2;
}

message PostCardsRequest {
  reserved 1;
  string data = 2;
}

message SyncFromClientCredentialsRequest {
  repeated Credentials task = 1;
}

message Credentials {
  int32 id = 1;
  int32 id_user = 2;
  string resource = 3;
  string login = 4;
  string password = 5;
  string updated_at = 6;
  string action   = 7;
  string access_token = 8;
}

message SyncFromClientTextDataRequest {
  repeated TextData task = 1;
}

message TextData {
  int32 id = 1;
  int32 id_user = 2;
  string text = 3;
  string updated_at = 4;
  string action   = 5;
  string access_token = 6;
}

message SyncFromClientBinaryDataRequest {
  repeated BinaryData task = 1;
}

message BinaryData {
  int32 id = 1;
  int32 id_user = 2;
  string binary = 3;
  string updated_at = 4;
  string action   = 5;
  string access_token = 6;
}

message SyncFromClientCardsRequest {
  repeated Cards task = 1;
}

message Cards {
  int32 id = 1;
  int32 id_user = 2;
  string cards = 3;
  string updated_at = 4;
  string action   = 5;
  string access_token = 6;
}

message Empty {
  string message = 1;
}

service Register {
  rpc Register(RegisterRequest) returns (RegisterResponse);
}

service Auth {
  rpc Auth(AuthRequest) returns (AuthResponse);
}

service PostCredentials {
  rpc PostLoginAndPassword(PostLoginAndPasswordRequest) returns (Empty);
}

service PostTextData{
  rpc PostTextData(PostTextDataRequest) returns (Empty);
}

service PostBinaryData{
  rpc PostBinaryData(PostTextDataRequest) returns (Empty);
}

service PostCards{
  rpc PostCards(PostTextDataRequest) returns (Empty);
}

service Health {
  rpc Health(Empty) returns (Empty);
}

service SyncFromClient {
  rpc SyncFromClientCredentials(SyncFromClientCredentialsRequest) returns (Empty);
  rpc SyncFromClientTextData(SyncFromClientTextDataRequest) returns (Empty);
  rpc SyncFromClientBinaryData(SyncFromClientBinaryDataRequest) returns (Empty);
  rpc SyncFromClientCards(SyncFromClientCardsRequest) returns (Empty);
}